# 
# This is a GitHub Actions workflow file for building and testing SWMM.
#
# 


name: Build and Test

on:
  push:
    branches: [ master, develop, release, triplet_build ]
  pull_request:
    branches: [ master, develop, release ]

env:
  OMP_NUM_THREADS: 1
  BUILD_HOME: build
  TEST_HOME: nrtests
  PACKAGE_NAME:  vcpkg-export-20220826-200052.1.0.0
  PKG_NAME: vcpkg-export-20220826-200052

jobs:
  build:
    name: Build, Unit Testing, and Regression Testing
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, ubuntu-20.04, macos-latest]
        include:
          - os: windows-2019
            boost_platform_version: 2019
            boost_toolset: msvc
            run_reg_test: run-nrtests.cmd
            run_before_reg_test: before-nrtest.cmd
            build_unit_test: make.cmd /g "Visual Studio 16 2019" /A "x64" /t
            build_for_reg_test: make.cmd /g "Visual Studio 16 2019" /A "x64"
            install_req_pkgs: 
            build_identifier: "%GITHUB_RUN_ID%_%GITHUB_RUN_NUMBER%"
            continue-on-error: false
            defaults:
              run:
                shell: cmd
                working-directory: ./ci-tools/windows
          - os: ubuntu-20.04
            boost_platform_version: 20.04
            boost_toolset: gcc
            run_reg_test: run-nrtests.sh
            run_before_reg_test: before-nrtest.sh
            build_unit_test: make.sh -s -t -g "Unix Makefiles"
            build_for_reg_test: make.sh -s -g "Unix Makefiles"
            build_identifier: ${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}
            install_req_pkgs: sudo apt install libboost-dev libboost-all-dev
            continue-on-error: true
            defaults:
              run:
                shell: bash
                working-directory: ./ci-tools/linux
          - os: macos-latest
            link: shared
            boost_platform_version: 10.15
            boost_toolset: clang
            run_reg_test: run-nrtests.zsh
            run_before_reg_test: before-nrtest.zsh
            build_unit_test: make.zsh -t -g "Xcode"
            build_for_reg_test: make.zsh -g "Xcode"
            install_req_pkgs: brew install boost
            build_identifier: ${GITHUB_RUN_ID}_${GITHUB_RUN_NUMBER}
            continue-on-error: true
            defaults:
              run:
                shell: zsh {0}
                working-directory: ./ci-tools/darwin

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.continue-on-error }}
    environment: testing
    defaults:
      run:
        shell: ${{ matrix.defaults.run.shell }}
        working-directory: ${{ matrix.defaults.run.working-directory }}

    env:
      PROJECT: swmm
      BUILD_HOME: build
      TEST_HOME: nrtests
      OMP_NUM_THREADS: 1
      PACKAGE_NAME:  vcpkg-export-20220826-200052.1.0.0
      PKG_NAME: vcpkg-export-20220826-200052

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Install Boost (Windows)
      env:
        REMOTE_STORE: "https://nuget.pkg.github.com/michaeltryby/index.json"
        USERNAME: michaeltryby
      if: ${{runner.os == 'Windows'}} 
      run: |
        nuget sources add -Name github -Source ${{ env.REMOTE_STORE }} -Username ${{ env.USERNAME }} -Password ${{ secrets.ACCESS_TOKEN }}
        nuget install ${{env.PKG_NAME}} -Source github

    - name: Install Boost (Linux or MacOS)
      if: ${{runner.os != 'Windows'}} 
      run: |
        ${{ matrix.install_req_pkgs }}
  
    - name: Install OpenMP for MacOS
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        brew reinstall --build-from-source --formula ../../openmp/darwin/libomp.rb

    - name: Checkout ci-tools Repo
      uses: actions/checkout@v3
      with:
        repository: michaeltryby/ci-tools
        ref: master
        path: ci-tools 
    
    - name: Build and Unit Test (Windows)
      if: ${{runner.os == 'Windows'}} 
      env:
        CMAKE_TOOLCHAIN_FILE: .\${{env.PACKAGE_NAME}}\scripts\buildsystems\vcpkg.cmake
      run: |
        ./${{ matrix.build_unit_test }} 
      
    - name: Build and Unit Test (Linux or MacOS)
      if: ${{ matrix.os != 'Windows' }}
      run: |
        ./${{ matrix.build_unit_test }} 

    - name: Setup python
      uses: actions/setup-python@v4
      with:
        python-version: '3.7'

    - name: Install Python Requirements for Regression Testing
      run: |
        python -m pip install --upgrade pip
        python -m pip install -r requirements-swmm.txt

    - name: Build for Regression Testing (Windows)
      if: ${{runner.os == 'Windows'}} 
      env:
          CMAKE_TOOLCHAIN_FILE: .\${{env.PACKAGE_NAME}}\scripts\buildsystems\vcpkg.cmake
      run: |
        ./${{ matrix.build_for_reg_test }}
    
    - name: Build for Regression Testing (Linux or MacOS)
      if: ${{ matrix.os != 'Windows' }}
      run: |
        ./${{ matrix.build_for_reg_test }}
  

    - name: Before Regression Testing
      env:
        NRTESTS_URL: https://github.com/USEPA/swmm-nrtestsuite
        BENCHMARK_TAG: v2.4.0-dev
      run: |
        ./${{ matrix.run_before_reg_test }} ${{ env.BENCHMARK_TAG }}

    - name: Run Regression Testing
      run:  |
        ./${{ matrix.run_reg_test }} ${{ matrix.build_identifier }}

    - name: Upload Artifacts
      if: ${{ always() }}
      uses: actions/upload-artifact@v3
      with:
        name: build-test-artifacts
        path: upload/*.*