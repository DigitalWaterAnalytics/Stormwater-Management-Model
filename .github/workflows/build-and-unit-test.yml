name: Build and Unit Test

on:
  push:
    branches: [ master, bug_fixes]
  pull_request:
    branches: [ master, develop, release ]
  schedule:
    - cron: '0 0 * 1 0'

env:
  OMP_NUM_THREADS: 1

jobs:
  build_and_unit_test_engine:
    name: Build and unit test engine 
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13,  macos-latest]
        include:
          - os: ubuntu-latest
            experimental: true
          - os: macos-13
            experimental: true
          - os: macos-latest
            experimental: true

    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Install boost-test (Windows)
      if: matrix.os == 'windows-latest' 
      run: |
        C:\vcpkg\vcpkg.exe install boost
        C:\vcpkg\vcpkg.exe integrate install

    - name: Install boost-test (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install libboost-test-dev

    - name: Install boost-test (MacOS)
      if: matrix.os == 'macos-13' || matrix.os == 'macos-latest'
      run: brew install boost

    - name: Install OpenMP (MacOS)
      if: matrix.os == 'macos-13' || matrix.os == 'macos-latest'
      run: |
        brew reinstall --build-from-source --formula ./exter/macos/libomp.rb

    - name: Build (Windows)
      if: matrix.os == 'windows-latest'
      env:
        TOOL_CHAIN_PATH: ${{ env.VCPKG_INSTALLATION_ROOT }}\scripts\buildsystems\vcpkg.cmake
      run: |
        cmake -G "Visual Studio 17 2022" -A x64 -B .\build -DBUILD_TESTS=ON -DCMAKE_TOOLCHAIN_FILE=${{env.TOOL_CHAIN_PATH}} .
        cmake --build .\build --config DEBUG
    
    - name: Build (Linux and Mac)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-13' || matrix.os == 'macos-latest'
      run: |
        cmake -B ./build -DBUILD_TESTS=ON .
        cmake --build ./build --config DEBUG

    - name: Unit Test
      run: ctest --test-dir .\build -C Debug --output-on-failure